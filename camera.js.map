{"mappings":"ACAA,MAAM;IACF,YAAY,KAAK,EAAE,MAAM,CAAE;QACvB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;IACzC;IAEA,kBAAkB,IAAI;IACtB,kBAAkB,IAAI;IAEtB,cAAc;QACV,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;QAC1C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,iBAAiB;QACzF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB;IACzC;AACJ;IAEA,2CAAe;;;ADff,MAAM,wCAAkB,OAAO,KAAK;IAEhC,aAAc;QACV,KAAK,CAAC;YAAE,KAAK;QAAO;IACxB;IAEA,0BAA0B;IAC1B,OAAO;QACH,IAAI,CAAC,WAAW,GAAG;IACvB;IAEA,gEAAgE;IAChE,UAAU;QACN,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ;QACjC,SAAS,SAAS,CAAC,UAAU;QAC7B,SAAS,QAAQ,CAAC,GAAG,GAAG,IAAI;QAC5B,SAAS,eAAe,CAAC,UAAU,IAAI;IAC3C;IAEA,wBAAwB;IACxB,SAAS;QACL,kDAAkD;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,UAAU,GAAG,GAAG,OAAO,WAAW,GAAG,GAAG;QAC7E,IAAI,CAAC,MAAM,CAAC,cAAc;QAE1B,0BAA0B;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB;QAEnD,oBAAoB;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA,GAAA,wCAAK,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM;QAC1C,IAAI,CAAC,MAAM,CAAC,WAAW;IAC3B;IAEA,kBAAkB;IAClB,SAAS;QACL,8BAA8B;QAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EACxB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;aAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAChC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;QAGrC,2BAA2B;QAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EACtB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;aAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAC/B,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;IAEzC;AACJ;AAGA,cAAc;AACd,OAAO,MAAM,GAAG;IACZ,IAAI,OAAO,WAAW,aAAa;QAC/B,OAAO,SAAS,GAAG,IAAI;QAEvB,OAAO,IAAI,GAAG,IAAI,OAAO,IAAI,CAAC;YAC1B,MAAM,OAAO,IAAI;YACjB,OAAO,OAAO,UAAU;YACxB,QAAQ,OAAO,WAAW;YAC1B,OAAO;gBAAC;aAAU;YAClB,iBAAiB,UAAU,yBAAyB;QACxD;IACJ,OACI,QAAQ,GAAG,CAAC;AAEpB","sources":["player.js","camera.js"],"sourcesContent":["import Camera from './camera.js';\r\n\r\nclass GameScene extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super({ key: 'Game' });\r\n    }\r\n\r\n    // Initialize player speed\r\n    init() {\r\n        this.playerSpeed = 1.5;\r\n    }\r\n\r\n    // TODO: Player sprite art. Blue box placeholder sprite for now.\r\n    preload() {\r\n        var graphics = this.make.graphics();\r\n        graphics.fillStyle(0x0000FF, 1);\r\n        graphics.fillRect(0, 0, 20, 20);\r\n        graphics.generateTexture('player', 20, 20);\r\n    }\r\n\r\n    // Create player sprite \r\n    create() {\r\n        // Create canvas that expands to the entire screen\r\n        this.player = this.add.sprite(window.innerWidth / 2, window.innerHeight / 2, 'player');\r\n        this.player.setInteractive();\r\n\r\n        // Arrow keys for movement\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        // Create the camera\r\n        this.camera = new Camera(this, this.player);\r\n        this.camera.startFollow()\r\n    }\r\n\r\n    // Player movement\r\n    update() {\r\n        // Handles left/right movement\r\n        if (this.cursors.left.isDown) {\r\n            this.player.x -= this.playerSpeed;\r\n        } else if (this.cursors.right.isDown) {\r\n            this.player.x += this.playerSpeed;\r\n        }\r\n\r\n        // Handles up/down movement\r\n        if (this.cursors.up.isDown) {\r\n            this.player.y -= this.playerSpeed;\r\n        } else if (this.cursors.down.isDown) {\r\n            this.player.y += this.playerSpeed;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Create game\r\nwindow.onload = function () {\r\n    if (typeof Phaser !== \"undefined\") {\r\n        window.gameScene = new GameScene();\r\n\r\n        window.game = new Phaser.Game({\r\n            type: Phaser.AUTO,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            scene: [gameScene],\r\n            backgroundColor: '#5F8575' // Green background color\r\n        });\r\n    } else {\r\n        console.log(\"Phaser is undefined :(\");\r\n    }\r\n}","class Camera {\r\n    constructor(scene, player) {\r\n        this.scene = scene;\r\n        this.player = player;\r\n        this.camera = this.scene.cameras.main;\r\n    }\r\n\r\n    interpolation_x = 0.5;\r\n    interpolation_y = 0.5;\r\n\r\n    startFollow() {\r\n        this.camera.startFollow(this.player.sprite);\r\n        this.camera.setFollowStyle(Phaser.Cameras.Scene2D.Camera.FOLLOW_LOCKON, interpolation_x, interpolation_y);\r\n        this.camera.setLerp(interpolation_x, interpolation_y);\r\n    }\r\n}\r\n\r\nexport default Camera;"],"names":[],"version":3,"file":"camera.js.map"}